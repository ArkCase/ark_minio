#!/bin/bash

set -euo pipefail

timestamp() {
	date -Isec -u
}

say() {
	echo -e "$(timestamp): ${@}"
}

err() {
	say "ERROR: ${@}" 1>&2
}

fail() {
	say "${@}" 1>&2
	exit ${EXIT_CODE:-1}
}

render_data_arg() {
	local NODES="${1}"
	local DATA_DIR="${2}"
	local POD_NAME_TEMPLATE="${3}"
	local NODE_LIMIT="$(( ${NODES} - 1 ))"

	if [ ${NODES} -gt 1 ] ; then
		echo -n "http://${POD_NAME_TEMPLATE}{0..${NODE_LIMIT}}.$(echo -n "${HN[@]:1}" | /usr/bin/tr ' ' '.')${DATA_DIR}"
	else
		echo -n "${DATA_DIR}"
	fi
}

[ -v BASE_DIR ] || BASE_DIR="/app"
[ -v DATA_DIR ] || DATA_DIR="${BASE_DIR}/data"

#
# First, validate the data directory
#
[[ "${DATA_DIR}" =~ ^/.* ]] || fail "The DATA_DIR value must be an absolute path: [${DATA_DIR}]"
[ -e "${DATA_DIR}" ] || fail "The directory [${DATA_DIR}] does not exist"
[ -d "${DATA_DIR}" ] || fail "The path [${DATA_DIR}] is not a directory"
[ -r "${DATA_DIR}" ] || fail "The directory [${DATA_DIR}] does not readable"
[ -w "${DATA_DIR}" ] || fail "The directory [${DATA_DIR}] does not writable"
[ -x "${DATA_DIR}" ] || fail "The directory [${DATA_DIR}] does not executable"
DATA_DIR="$(/usr/bin/readlink -f "${DATA_DIR}" | /usr/bin/sed -e 's;/$;;g')"

#
# Next, update the SSL trusts...
#
/update-ssl

#
# Compute the name generation pattern
#
FQDN="$(/usr/bin/hostname -f)"
HN=()
readarray -t -d . HN < <(echo -n "${FQDN}")

[ -v POD_NAME_TEMPLATE ] || POD_NAME_TEMPLATE="$(echo -n "${HN[0]}" | /usr/bin/sed -e 's;-[0-9]\+$;-;g')"

#
# First things first: how many nodes do we want to run?
#
[ -v NODES ] || NODES=1
[[ "${NODES}" =~ ^[0-9]+$ ]] || fail "The node count [${NODES}] is not valid"
[ ${NODES} -lt 1 ] && NODES=1
if [ ${NODES} -gt 1 ] ; then
	MOD4=$(( ${NODES} % 4 ))
	MOD16=$(( ${NODES} % 16 ))
	[ ${MOD4} -ne 0 ] && [ ${MOD16} -ne 0 ] && fail "The node count must be a multiple of either 4 or 16: ${NODES}"
fi

#
# In case we want to use a custom executable
#
[ -v MINIO_EXE ] || MINIO_EXE="/usr/local/bin/minio"

DATA_ARG="$(render_data_arg "${NODES}" "${DATA_DIR}" "${POD_NAME_TEMPLATE}")"
set -x
exec "${MINIO_EXE}" server "${DATA_ARG}" "${@}"

#!/bin/bash

set -euo pipefail
. /.functions

render_data_arg()
{
	local NODES="${1}"
	local DATA_DIR="${2}"
	local POD_NAME_TEMPLATE="${3}"
	local NODE_LIMIT="$(( ${NODES} - 1 ))"

	if [ ${NODES} -gt 1 ] ; then
		echo -n "http://${POD_NAME_TEMPLATE}{0...${NODE_LIMIT}}.$(echo -n "${HN[@]:1}" | /usr/bin/tr ' ' '.')${DATA_DIR}"
	else
		echo -n "${DATA_DIR}"
	fi
}

set_or_default BASE_DIR "/app"
set_or_default DATA_DIR "${BASE_DIR}/data"
set_or_default LOGS_DIR "${DATA_DIR}"

redirect_logs "${LOGS_DIR}/minio.log"

#
# First, validate the data directory
#
[[ "${DATA_DIR}" =~ ^/.* ]] || fail "The DATA_DIR value must be an absolute path: [${DATA_DIR}]"
require_dir_readwrite "${DATA_DIR}"
DATA_DIR="$(/usr/bin/readlink -f "${DATA_DIR}" | /usr/bin/sed -e 's;/$;;g')"

#
# Next, update the SSL trusts...
#
init_ssl

# Copy the SSL certs into the required location
set_or_default CERT_DIR "${HOME}/certs"

ensure_dir "${CERT_DIR}"
cp -pv "${SSL_DIR}/cert.key" "${CERT_DIR}/private.key"
cp -pv "${SSL_DIR}/cert.pem" "${CERT_DIR}/public.crt"

#
# Compute the name generation pattern
#
FQDN="$(/usr/bin/hostname -f)"
HN=()
readarray -t -d . HN < <(echo -n "${FQDN}")

set_or_default POD_NAME_TEMPLATE "$(echo -n "${HN[0]}" | /usr/bin/sed -e 's;-[0-9]\+$;-;g')"

#
# First things first: how many nodes do we want to run?
#
set_or_default NODES "1"
[[ "${NODES}" =~ ^[0-9]+$ ]] || fail "The node count [${NODES}] is not valid"
[ ${NODES} -lt 1 ] && NODES=1
if [ ${NODES} -gt 1 ] ; then
	MOD4=$(( ${NODES} % 4 ))
	MOD16=$(( ${NODES} % 16 ))
	[ ${MOD4} -ne 0 ] && [ ${MOD16} -ne 0 ] && fail "The node count must be a multiple of either 4 or 16: ${NODES}"
fi

#
# In case we want to use a custom executable
#
set_or_default MINIO_EXE "/usr/local/bin/minio"

[ -d "${DATA_DIR}/.minio.sys" ] || touch "${HOME}/.initRan"

DATA_ARG="$(render_data_arg "${NODES}" "${DATA_DIR}" "${POD_NAME_TEMPLATE}")"
execute "${MINIO_EXE}" server --certs-dir "${CERT_DIR}" "${DATA_ARG}" "${@}"
